using System;
using System.Collections.Generic;
using Dapper.Contrib.Extensions;
using AiTech.CrudPattern;

namespace Dll.MTOP
{
	public interface IToda
    {           		
        string Code {get; set;}        		
        object Description {get; set;}	
    }



    [Table("MTOP_Toda")]
    public class Toda: Entity, IToda
    {		
		Dictionary<string,object> OriginalValues;

		#region Default Properties
		        		
        public string Code {get; set;}        		
        public object Description {get; set;}	
		
		#endregion
		

		public Toda (): base()
        {         		
		  Description =  new object(); 	
        }


		public void InitializeTrackingChanges()
		{
			OriginalValues = new Dictionary<string,object>();
			        
		 	OriginalValues.Add("Code", this.Code);		
		}

		override public Dictionary<string,object> GetChanges()
		{
			var changes = new Dictionary<string, object>();

			        		 	
			if(!Equals(this.Code, OriginalValues["Code"]))
				changes.Add("Code", this.Code);
			            
			
            return changes;
		}

		
	}


	
}

